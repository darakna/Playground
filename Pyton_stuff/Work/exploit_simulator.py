__author__ = 'darakna'
import os
import time
from platform import machine
simulator_location = "sim_path"
def dir_exist(location):
    if os.path.exists(location) is False:
        print(location, " could not be found")
        return False
    else:
        print(location, " found")
        return True

def simulator_daemon(arg, ver ):
    if ver == "32":
        result=os.popen(simulator_location+"\\simulator"+ver+".exe "+arg).write()
        return result
    else:
        result1=os.popen(simulator_location+'\\simulator32.exe '+arg).read()
        if "simulator has not been killed!" not in result1:
            result1="simulator has been killed! \n"
        else:
            result1="simulator has not been killed! \n"
        result2=os.popen(simulator_location+"\\simulator"+ver+".exe "+arg).read()
        if "simulator has not been killed!" not in result2:
            result2="simulator has been killed! \n"
        else:
            result2="simulator has not been killed! \n"
        print("Running \"simulator32.exe "+arg+"\"\n"+result1)
        print("Running \"simulator64.exe "+arg+"\"\n"+result2)

def os_architecture():
    if machine().endswith("64"):
        print("OS architecture is 64")
        return "64"
    else:
        print("OS architecture is 32")
        return "32"
os_arch = os_architecture()
dir_exist(simulator_location)
dir_exist(simulator_location+"\\simulator"+os_arch+".exe")
if os_arch == "64":
    dir_exist(simulator_location+"\\simulator"+"32.exe")
simulator_daemon("/exploit1",os_arch)
simulator_daemon("/exploit2",os_arch)
simulator_daemon("/exploit3",os_arch)
simulator_daemon("/exploit4",os_arch)
simulator_daemon("/exploit5",os_arch)
time.sleep(7)